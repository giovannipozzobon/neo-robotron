; ***************************************************************************************
; ***************************************************************************************
;
;		Name : 		sound.asm
;		Author :	Paul Robson (paul@robsons.org.uk)
;		Date : 		28th April 2024
;		Reviewed :	No
;		Purpose :	Sound code
;
; ***************************************************************************************
; ***************************************************************************************

zTemp0 = 0

playnote .macro
		jsr 	SoundPlayNote
		.byte 	0
		.word 	\1
		.word 	\2
		.word 	(\3) & $FFFF
		.byte 	0
		.endm

; ***************************************************************************************
;
;			enemy dead : short explosion 				[FX 21]
;
; ***************************************************************************************

SND_EnemyDead:
		lda 	#21
		jsr 	SoundPlaySFX
		rts

; ***************************************************************************************
;
;			family collected : warbly up sound 			[FX 8]
;
; ***************************************************************************************

SND_FamilyCollect:
		lda 	#8
		jsr 	SoundPlaySFX
		rts

; ***************************************************************************************
;
;			grunt walking : short clip					[SD 200,2]
;	 						(Disabled for now, too common)
;
; ***************************************************************************************

SND_GruntMove:
;		.playnote 200,1,0
		rts

; ***************************************************************************************
;
;			player shooting : short slight slide 		[SD 300,6,-25]
;
; ***************************************************************************************

SND_PlayerShoot:
		.playnote 	300,6,-25
		rts

; ***************************************************************************************
;
;			player dying : longer explosion 			[FX 19]
;
; ***************************************************************************************

SND_PlayerDead:
		lda 	#19
		jsr 	SoundPlaySFX
		rts

; ***************************************************************************************
;
;			pong attack : warbly higher pitch sound 	[SD 300,20,-999]
;
; ***************************************************************************************

SND_PongAttack:
		rts

; ***************************************************************************************
;
;			start level : rapid scaling					[SD 300,60,-400]
;
; ***************************************************************************************

;  		Done in the drawing code.

; ***************************************************************************************
;
;			start up : two descending slides followed by a longer beep [BASIC]
;
; ***************************************************************************************

; 		SOUND 0,900,25,-70 twice
; 		SOUND 0,200,25

; ***************************************************************************************
;
;			new level : ascending beep in steps. [ BASIC]
;
; ***************************************************************************************

; 		Done in the drawing code.

; ***************************************************************************************
;
;							Play note, data in following bytes
;
; ***************************************************************************************

SoundPlayNote:
		lda 	APICommand
		bne 	SoundPlayNote
		pla
		sta 	zTemp0
		pla
		sta 	zTemp0+1
		phx
		ldx 	#0
_SPNLoop:
		inc 	zTemp0
		bne 	_SPNCarry
		inc 	zTemp0+1
_SPNCarry:
		lda 	(zTemp0)
		sta 	APIParams,x
		inx 
		cpx 	#8
		bne 	_SPNLoop

		lda 	#4
		sta 	APIFunction
		lda 	#8
		sta 	APICommand
		
		plx
		lda 	zTemp0+1
		pha
		lda 	zTemp0
		pha
		rts

; ***************************************************************************************
;
;										Play SFX A
;
; ***************************************************************************************

SoundPlaySFX:
		pha
_SPWait:
		lda 	APICommand
		bne 	_SPWait
		pla
		stz 	APIParams+0
		sta 	APIParams+1
		lda 	#5
		sta 	APIFunction
		lda 	#8
		sta 	APICommand
		rts
